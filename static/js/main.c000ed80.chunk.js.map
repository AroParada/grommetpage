{"version":3,"sources":["components/card.js","components/nav.js","components/intro.js","components/footer.js","components/skills.js","assets/Screenshot (189).png","assets/Screenshot (130).png","assets/Screenshot (53).png","assets/Screenshot (151).png","components/richfooter.js","components/portfolio.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["Mycard","Card","margin","height","width","background","align","CardHeader","pad","CardBody","Box","justify","direction","gap","Avatar","size","src","text-align","steps","loop","wrapper","Button","icon","Code","color","alignSelf","CardFooter","horizontal","Mynav","Header","Anchor","label","ResponsiveContext","Consumer","responsive","Menu","dropBackground","justifyContent","items","href","target","rel","Github","onClick","Document","Mail","Nav","hoverIndicator","Linkedin","Intro","Grommet","Infinity","Paragraph","textAlign","primary","id","Download","SimpleFooter","Footer","Text","Skills","Heading","Html5","Css3","Js","Reactjs","Node","Npm","Wordpress","Gremlin","Heroku","Mysql","PiedPiper","RichFooter","data","Image","fit","cryptopic","a11yTitle","github","link","Link","title","summary","info","directorypic","angelpic","eatingpic","React","useState","open","setOpen","ExpandButton","rest","Icon","FormUp","FormDown","Grid","rows","columns","count","map","value","className","elevation","level","vertical","top","Collapsible","storyName","Portfolio","customBreakpoints","deepMerge","grommet","global","breakpoints","small","medium","large","colors","brand","font","family","theme","full","Main","flex","Home","xlarge","Responsive","children","areas","overrideColumns","overrideRows","props","columnsVal","rowsVal","areasVal","Array","isArray","undefined","name","start","end","gridArea","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c000ed80.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Avatar, Button, Card, CardHeader, CardBody, CardFooter } from 'grommet';\nimport { Code } from 'grommet-icons'\nimport Typical from 'react-typical'\n\n\nfunction Mycard() {\n  return (\n    <Card margin=\"small\" height=\"medium\" width=\"medium\" background=\"light-1\" align=\"center\">\n          <CardHeader pad=\"medium\"></CardHeader>\n          <CardBody \n            pad=\"medium\">\n            <Box justify=\"center\" direction=\"row\" gap=\"small\">\n            <Avatar size=\"xlarge\" src=\"https://live.staticflickr.com/65535/51322007907_3770d31af0_b.jpg\" />    \n            </Box>\n            <Typical\n              text-align=\"center\"\n              align=\"center\"\n              steps={[\"Hello, I'm Aro\", 1000 ,]}\n              loop={3}\n              wrapper=\"h1\"\n            /> \n             <Button\n          icon={<Code size=\"large\" color=\"brand\" />}\n          alignSelf=\"center\"\n        />\n          </CardBody>\n          <CardFooter pad={{horizontal: \"small\"}} background=\"light-2\">   \n        </CardFooter>\n    </Card>\n  )\n}\nexport default Mycard;","import React from 'react';\nimport { Nav, Anchor, ResponsiveContext, Header, Box, Menu  } from 'grommet';\nimport { Mail, Github, Linkedin, Document, } from 'grommet-icons'\n\n\nconst Mynav = () => {\n\n  return (\n<Header background=\"brand\" pad=\"x-small\">\n      <Box direction=\"row\" align=\"center\" gap=\"small\">\n        <Anchor color=\"white\" alignSelf=\"center\" size=\"xlarge\" label=\"A\" margin=\"medium\"  >  \n        </Anchor>\n      </Box>\n      <ResponsiveContext.Consumer>\n        {responsive =>\n          responsive === 'small' ? (\n            <Menu\n              size=\"medium\"\n              dropBackground=\"brand\"\n              justifyContent=\"center\"\n              items=\n              {[\n                // { icon: <Anchor href=\"/grommetpage/#/home\" color=\"white\" icon={<Home />} />, onClick: () => {} },\n                { icon: <Anchor href=\"https://github.com/AroParada\" target=\"_blank\" rel=\"noopener\" color=\"white\" icon={<Github />} />,  onClick: () => {} },\n                { icon: <Anchor href=\"https://docs.google.com/document/d/19dAEEabihDZaa6nlFYliqCUL_HK2jThcuAPnxInU194/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\" color=\"white\" icon={<Document />} />, onClick: () => {} },\n                { icon: <Anchor href=\"mailto:haroldparada20@gmail.com\" color=\"white\" icon={<Mail />} />, onClick: () => {} },\n              ]}\n            />\n          ) : (\n  <Nav direction=\"row\" background=\"brand\" pad=\"medium\">\n    {/* <Anchor href=\"/grommetpage/#/home\" color=\"white\" icon={<Home />} hoverIndicator />  */}\n    <Anchor href=\"https://github.com/AroParada\" target=\"_blank\" rel=\"noopener\" color=\"white\" icon={<Github />} hoverIndicator />\n    <Anchor href=\"https://www.linkedin.com/in/aroparada/\" target=\"_blank\" rel=\"noopener\" color=\"white\" icon={<Linkedin />} hoverIndicator />\n    <Anchor href=\"mailto:haroldparada20@gmail.com\" color=\"white\" icon={<Mail />} hoverIndicator />  \n  </Nav>\n      )\n  }\n  </ResponsiveContext.Consumer>\n</Header>\n  )\n}\nexport default Mynav;","import React from 'react';\nimport { Paragraph, Box, Button, Grommet } from 'grommet';\nimport Typical from 'react-typical'\n\nconst Intro = () => {\n\n    return (\n    <Grommet >\n        <Box align=\"center\" pad=\"\" background=\"light-4\">\n        <Typical\n              text-align=\"center\"\n              align=\"center\"\n              steps={[\n                \"\",\n                1200 ,\n                \"Web Developer💻\",\n                2000 ,\n                \"musician 🎸\",\n                1000 ,\n                \"history nerd 📚\",\n                1000,\n                \"burger lover 🍔\", \n                1000,\n                ]}\n              loop={Infinity}\n              wrapper=\"h1\"\n            /> \n        <Paragraph textAlign=\"center\" size=\"xlarge\">\n          Currently work on using programming languages to provide quality interactions\n          between users and software programs. Passionate for learning\n          linguistics and business which help problem solving and working with teams to create\n          unique user experiences.\n        </Paragraph>\n          <Button primary label=\"Resume\" href=\"https://docs.google.com/document/d/19dAEEabihDZaa6nlFYliqCUL_HK2jThcuAPnxInU194/edit?usp=sharing\" id=\"shadow\" target=\"_blank\" rel=\"noopener\" Download/> \n        </Box>\n    </Grommet>\n    )\n}\nexport default Intro;","import React from 'react';\n\nimport { Footer, Text } from 'grommet';\n\nexport const SimpleFooter = () => (\n  \n    <Footer background=\"dark-5\" justify=\"center\" pad=\"medium\">\n      <Text textAlign=\"center\" size=\"small\">\n        Website by Aro Parada\n      </Text>\n    </Footer>\n);\n\nexport default SimpleFooter;","import React from 'react';\nimport { Heading, Grommet} from 'grommet';\nimport { Js, Reactjs, Node, Npm, Html5, Css3, Wordpress, Gremlin, Heroku, Mysql, PiedPiper} from 'grommet-icons'\nimport AWS from 'react-aws-icons/dist/aws/logo/AWS';\n\nconst Skills = () => {\n\n\n    return(\n    <Grommet >\n        <Heading size=\"small\" margin=\"medium\">Programming Languages & Tools</Heading>\n        <Html5 color='neutral-4' size='large'/>\n        <Css3 color='#0daeff' size='large'/>\n        <Js color='plain' size='large' />\n        <Reactjs color='plain' size='large'/>\n        <Node color='plain' size='large'/>\n        <Npm color='plain' size='large'/>\n        <AWS size={53} />\n        <Wordpress color='plain' size='large'/>\n        <Gremlin color='purple' size='large'/>\n        <Heroku color='plain' size='large'/>\n        <Mysql color='plain' size='large'/>\n        <PiedPiper color='plain' size='large'/>\n    </Grommet>\n    )\n}\n\nexport default Skills","export default __webpack_public_path__ + \"static/media/Screenshot (189).2b897d87.png\";","export default __webpack_public_path__ + \"static/media/Screenshot (130).bf5c1fc5.png\";","export default __webpack_public_path__ + \"static/media/Screenshot (53).7d074480.png\";","export default __webpack_public_path__ + \"static/media/Screenshot (151).6040fa34.png\";","import React from 'react';\nimport {\n  Grid,\n  Anchor,\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Collapsible,\n  Heading,\n  Grommet,\n  Image,\n  Paragraph,\n} from 'grommet';\n\nimport cryptopic from '../assets/Screenshot (189).png';\nimport angelpic from '../assets/Screenshot (130).png'\nimport eatingpic from '../assets/Screenshot (53).png'\nimport directorypic from '../assets/Screenshot (151).png'\nimport { FormDown, FormUp, Link, Github } from 'grommet-icons';\n\nexport const RichFooter = () => {\n  const data = [\n    {\n      id: 0,\n      Image: <Image fit=\"cover\" src={cryptopic} a11yTitle=\"bridge\"/>,\n      github: <Anchor href=\"https://github.com/jamescbaldwin/react-finance/tree/aro\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Github />} hoverIndicator />,\n      link: <Anchor href=\"https://stark-tor-31756.herokuapp.com/\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Link />} hoverIndicator />,\n      title: 'Crypto Tracker',\n      summary: 'Team built application that provides a dashboard to track crypto coins that users follow',\n      info: 'Role: Front and back-end for user login/signup. Developed with React, MongoDB, Passport and Google authentication to login users to the site.',\n    },\n    {\n      id: 1,\n      Image: <Image fit=\"cover\" src={directorypic} a11yTitle=\"bridge\"/>,\n      github: <Anchor href=\"https://github.com/AroParada/employeedirectory\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Github />} hoverIndicator />,\n      link: <Anchor href=\"https://aroparada.github.io/employeedirectory/\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Link />} hoverIndicator />,\n      title: 'React User Directory ',\n      summary: 'An employee directory that allows the user to filter list by last name or search box',\n      info: 'Role: Sole author developed with React components, manages component state, and responds to user events.',\n    },\n    {\n      id: 2,\n      Image: <Image fit=\"cover\" src={angelpic} a11yTitle=\"bridge\"/>,\n      github: <Anchor href=\"https://github.com/AroParada/diosdadoProductions\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Github />} hoverIndicator />,\n      link: <Anchor href=\"https://www.diosdadophotography.com/\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Link />} hoverIndicator />,\n      title: 'Diosdado Productions ',\n      summary: 'A simple design focused portfolio and contact site for local Raleigh photographer',\n      info: 'Role: Sole author. Made with simple Html, CSS, and Javascript',\n    },\n    {\n      id: 3,\n      Image: <Image fit=\"cover\" src={eatingpic} a11yTitle=\"bridge\"/>,\n      github: <Anchor href=\"https://github.com/nihalwill/EatingHour\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Github />} hoverIndicator />,\n      link: <Anchor href=\"https://nihalwill.github.io/EatingHour/\" target=\"_blank\" rel=\"noopener\" color=\"plain\" icon={<Link />} hoverIndicator />,\n      title: 'The Eating Hour ',\n      summary: 'Team built application allows a user to easily query their favorite meals and beverages.',\n      info: 'Uses Server-side APIs, The Meal db, The Cocktail db,and Materialize.',\n    },\n  ];\n\n  const [open, setOpen] = React.useState(false);\n\n  const ExpandButton = ({ ...rest }) => {\n    const Icon = open ? FormUp : FormDown;\n    return (\n      <Button\n        label=\"Info\"\n        hoverIndicator=\"light-4\"\n        icon={<Icon color=\"brand\" />}\n        {...rest}\n      />\n    );\n  };\n  return (\n    <Grommet >\n      <Box pad=\"large\" >\n      {/*Responsive Grid*/}\n      <Grid gap=\"small\" rows=\"fit\" columns={{ count: 'fit', size: 'small' }}>\n      {data.map(value => (  \n        <Card background=\"light-1\" className=\"column\" elevation=\"large\" width=\"medium\" key={value.id}>\n          <CardBody height=\"small\">\n            {value.Image}\n          </CardBody>\n          <Box pad={{ horizontal: 'medium' }} responsive={false}>\n            <Heading level=\"3\" margin={{ vertical: 'medium' }}>\n              {value.title}\n            </Heading>\n            <Paragraph margin={{ top: 'none' }}>\n              {value.summary}\n            </Paragraph>\n          </Box>\n          <CardFooter>\n            <Box direction=\"row\" align=\"center\" gap=\"small\">\n              {value.link}\n              {value.github}\n            </Box>\n            <ExpandButton onClick={() => setOpen(!open)} />\n          </CardFooter>\n          <Collapsible open={open}>\n            <Paragraph margin=\"medium\" color=\"dark-3\">\n              {value.info}\n            </Paragraph>\n          </Collapsible>\n        </Card>\n        ))}\n        </Grid>\n      </Box>\n    </Grommet>\n  );\n};\n\nRichFooter.storyName = 'Rich footer';\n\nexport default RichFooter;","import React from \"react\";\nimport { Main, Heading, Box, Grommet, } from 'grommet';\nimport { RichFooter } from \"./richfooter\";\n\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\n\nfunction Portfolio() {\n\n    const customBreakpoints = deepMerge(grommet, {\n        global: {\n          breakpoints: {\n            small: {\n              value: 600,\n            },\n            medium: {\n              value: 3000,\n            },\n            large: {\n              value: 4000,\n            },\n          },\n            colors: {\n              brand: '#00739D',\n            },\n            font: {\n              family: 'Roboto',\n              size: '18px',\n              height: '20px',\n            },\n        },\n      });\n\n     \n    return (\n  <Grommet theme={customBreakpoints} full>\n    <Main background=\"light-6\" elevation=\"large\" pad=\"large\" gap=\"large\">\n    <Heading margin=\"none\">Portfolio.</Heading>\n    <RichFooter/>\n      <Box flex />\n    </Main>\n  </Grommet>\n  \n    );\n  }\n  \n  export default Portfolio;\n  ","import React from \"react\";\nimport { Heading, Box, Grid, Grommet, ResponsiveContext, } from 'grommet';\nimport MyCard from '../components/card'\nimport Mynav from \"../components/nav\";\nimport Intro from '../components/intro'\nimport SimpleFooter from '../components/footer';\nimport Skills from '../components/skills'\n\nimport { deepMerge } from 'grommet/utils';\nimport { grommet } from 'grommet/themes';\nimport Portfolio from \"../components/portfolio\";\n\nfunction Home() {\n\n  // set custom breakpoints so we can see the changes\n  const customBreakpoints = deepMerge(grommet, {\n    global: {\n      breakpoints: {\n        small: {\n          value: 600,\n        },\n        medium: {\n          value: 3000,\n        },\n        large: {\n          value: 4000,\n        },\n      },\n        colors: {\n          brand: '#00739D',\n        },\n        font: {\n          family: 'Roboto',\n          size: '18px',\n          height: '20px',\n        },\n    },\n  });\n\n  // columns, rows and areas are for Grid with a known number of contents / boxes.\n\n// If the size is small, we only see 1 column\n// If the size is medium, we only see 2 columns\n// If the size is either large or xlarge, we see 3 columns\nconst columns = {\n  small: ['auto'],\n  medium: ['auto', 'auto'],\n  large: ['auto', 'auto', 'auto'],\n  xlarge: ['auto', 'auto', 'auto'],\n};\n\n// If the size is small, we have 3 rows\n// If the size is medium, we have 2 rows\n// If the size is large or xlarge, we have 1 row\nconst rows = {\n  small: ['large', 'large', 'large'],\n  medium: ['large', 'large'],\n  large: ['large'],\n  xlarge: ['large'],\n};\n\n  // Set the different areas you need for every size\nconst fixedGridAreas = {\n  small: [\n    { name: 'header', start: [0, 0], end: [0, 0] },\n    { name: 'test', start: [0, 1], end: [0, 1] },\n    { name: 'test1', start: [0, 2], end: [0, 2] },\n  ],\n  medium: [\n    { name: 'header', start: [0, 0], end: [0, 0] },\n    { name: 'test', start: [1, 0], end: [1, 0] },\n    { name: 'test1', start: [0, 1], end: [1, 1] },\n  ],\n  large: [\n    { name: 'header', start: [0, 0], end: [0, 0] },\n    { name: 'test', start: [1, 0], end: [1, 0] },\n    { name: 'test1', start: [2, 0], end: [2, 0] },\n  ],\n};\n\nconst Responsive = ({\n  children,\n  overrideColumns,\n  overrideRows,\n  areas,\n  ...props\n}) => (\n  <ResponsiveContext.Consumer>\n    {size => {\n      // Take into consideration if not array is sent but a simple string\n      let columnsVal = columns;\n      if (columns) {\n        if (columns[size]) {\n          columnsVal = columns[size];\n        }\n      }\n\n      let rowsVal = rows;\n      if (rows) {\n        if (rows[size]) {\n          rowsVal = rows[size];\n        }\n      }\n\n      // Also if areas is a simple array not an object of arrays for\n      // different sizes\n      let areasVal = areas;\n      if (areas && !Array.isArray(areas)) areasVal = areas[size];\n\n      return (\n        <Grid\n          {...props}\n          areas={!areasVal ? undefined : areasVal}\n          rows={!rowsVal ? size : rowsVal}\n          columns={!columnsVal ? size : columnsVal}\n        >\n          {children}\n        </Grid>\n      );\n    }}\n  </ResponsiveContext.Consumer>\n);\n   \n  return (\n  <Grommet theme={customBreakpoints} full>\n  <Mynav/>\n   <Box>\n      <Responsive\n        rows={rows}\n        columns={columns}\n        areas={fixedGridAreas}\n      >\n        <Box\n          gridArea=\"header\"\n          background=\"light-4\"\n          justify=\"center\"\n          align=\"center\"\n        >\n      <Heading size=\"large\" margin=\"small\">Welcome.</Heading>\n  <MyCard/>\n        </Box>\n        <Box\n          gridArea=\"test\"\n          background=\"light-4\"\n          justify=\"center\"\n          align=\"center\"\n        >\n        <Intro/>\n        <Skills />\n        {/* <Scroll/> */}\n        </Box>\n        <Box\n          gridArea=\"test1\"\n          background=\"light-4\"\n          justify=\"center\"\n          align=\"center\"\n        >\n        <Portfolio />\n          <strong></strong>\n        </Box>\n      </Responsive>\n    </Box>\n  <SimpleFooter/>\n  </Grommet>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport Home from './pages/home';\n\nfunction App () {\n  return (\n    <div>\n         <Home />\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style/style.css';\n\n\n// import { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(\n//   <HashRouter>\n//     <App />\n//   </HashRouter>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}